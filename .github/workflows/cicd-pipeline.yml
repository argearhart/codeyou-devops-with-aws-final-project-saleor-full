name: Saleor CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry ruff pip-audit trivy

      - name: Linter
        run: |
          ruff check .
        continue-on-error: true

      - name: Dependency Analysis
        run: |
          pip-audit
        continue-on-error: true

      - name: Build API Docker Image
        run: |
          docker build -t argearhart/saleor-api:${{ github.ref_name }} ./saleor-api

      - name: Build Dashboard Docker Image
        run: |
          docker build -t argearhart/saleor-dashboard:${{ github.ref_name }} ./saleor-dashboard

      - name: Trivy Security Scan for API
        run: |
          trivy image argearhart/saleor-api:${{ github.ref_name }}
        continue-on-error: true

      - name: Trivy Security Scan for Dashboard
        run: |
          trivy image argearhart/saleor-dashboard:${{ github.ref_name }}
        continue-on-error: true

      - name: Push API Image to DockerHub
        if: github.ref_name == 'develop' || github.ref_name == 'staging' || github.ref_name == 'production'
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push argearhart/saleor-api:${{ github.ref_name }}

      - name: Push Dashboard Image to DockerHub
        if: github.ref_name == 'develop' || github.ref_name == 'staging' || github.ref_name == 'production'
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push argearhart/saleor-dashboard:${{ github.ref_name }}

  staging-validation:
    needs: build
    if: github.ref_name == 'staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate Docker Compose
        run: |
          docker-compose up -d
          sleep 10  
          docker-compose ps

      - name: Stop Containers
        run: docker-compose down

  production-deploy:
    needs: [build, staging-validation]
    if: github.ref_name == 'production'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS
        run: |
          echo "Deploying to AWS..."
